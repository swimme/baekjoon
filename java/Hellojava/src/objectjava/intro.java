package objectjava;

//[1-3.객체지향프로그래밍 /클래스, 인스턴스,객체]
public class intro {

	public static void main(String[] args) {
		//0. 연관된 메소드와 그 메소드가 사용하는 변수들을 그룹핑하는 대상; 재활용성, 부품화
		// 은닉화, 인터페이스
		// class_설계 , 인스턴스_부품
		
		//1. 객체(인스턴스; 데이터타입) 생성 (하여 변수에 담음)
		// (객체) 변수이름 = new 객체
		
		// 객체 정의
		// class (객체){ 변수, 메소드정의_public void }
		// cf. this.변수 ; 해당인스턴스(객체)의 변수 -> 객체class내 메소드의 params로 쓸수ㅇ

		//**하나의 클래스를 바탕으로 서로 다른 상태를 가진 인스턴스를 만듬**
		
		//2. 클래스와 인스턴스의 멤버
		// 2-1.클래스 변수; 인스턴스 c1의변수, c2의 변수 (값이 다를수있다)
		//+클래스 소유의 변수 (**static** (int 변수)); 모든 인스턴스에서 같은 값  + 인스턴스생성없이 접근가능(class.변수)
		
		/*****
		// 2-2.클래스소유의 메소드
		// public *static* void
		// 인스턴스 생성없이 사용가능
		 ******/
		
		//3.
		// 인스턴스 메소드-> static 클래스멤버접근가능
		// static 클래스 메소드 ->x 인스턴스멤버에 접근불가능 
		//생성순서; 클래스가 생성된 후 인스턴스가 생성되므로
		//// static아닌건 인스턴스생성있어야 사용가능
		//// static메소드는 인스턴스로 접근 가능하지만 static메소드 내에 인스턴스변수있다면 오류
		
	}
//https://www.opentutorials.org/course/1223/5440
}
